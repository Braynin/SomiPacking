---
// ModalProduct.astro
const { className = "", variant, ...rest } = Astro.props;
const variantJSON = JSON.stringify(variant);
---

<div
  {...rest}
  class={`cursor-pointer ${className}`}
  onclick="openModalProduct(this)"
  data-variant={variantJSON}
>
  <slot />
</div>
<script is:inline>
  function openModalProduct(element) {
    const variant = JSON.parse(element.getAttribute("data-variant"));

    const overlay = document.createElement("div");
    overlay.style.position = "fixed";
    overlay.style.top = "0";
    overlay.style.left = "0";
    overlay.style.width = "100vw";
    overlay.style.height = "100vh";
    overlay.style.backgroundColor = "rgba(0, 0, 0, 0.8)";
    overlay.style.display = "flex";
    overlay.style.alignItems = "center";
    overlay.style.justifyContent = "center";
    overlay.style.zIndex = "9999";
    overlay.style.opacity = "0";
    overlay.style.transition = "opacity 0.3s ease";

    const modal = document.createElement("div");
    modal.style.width = "80%";
    modal.style.maxWidth = "600px";
    modal.style.padding = "20px";
    modal.style.backgroundColor = "white";
    modal.style.borderRadius = "8px";
    modal.style.boxShadow = "0px 0px 10px rgba(0, 0, 0, 0.2)";
    modal.style.transform = "translateY(-20px)";
    modal.style.opacity = "0";
    modal.style.transition = "opacity 0.3s ease, transform 0.3s ease";

    // üî† Funci√≥n para convertir la clave a formato legible
    function beautifyKey(key) {
      return key
        .replace(/_/g, " ") // reemplaza guiones bajos por espacios
        .replace(/\b\w/g, (char) => char.toUpperCase()); // may√∫scula inicial de cada palabra
    }

    let contentHTML = `<h2 style="margin-bottom:16px; font-size: 20px;">Detalles: ${variant.title || ""}</h2>`;

    if (
      variant.caracteristicas &&
      typeof variant.caracteristicas === "object"
    ) {
      contentHTML += `<ul style="margin-bottom:16px;">`;

      for (const [key, value] of Object.entries(variant.caracteristicas)) {
        // Verificamos si la clave contiene "productos"
        if (key.toLowerCase().includes("productos")) {
          // Si la propiedad tiene la palabra "productos", mostramos solo el valor
          contentHTML += `<li style="margin-bottom:8px;">${value}</li>`;
        } else {
          const label = beautifyKey(key);
          if (typeof value === "string") {
            contentHTML += `<li style="margin-bottom:8px;"><strong>${label}:</strong> ${value}</li>`;
          } else if (value && value.type === "image" && value.src) {
            contentHTML += `<li style="margin-bottom:8px;"><strong>${label}:</strong><br/><img src="${value.src}" alt="${label}" style="max-width:100%;" /></li>`;
          }
        }
      }

      contentHTML += `</ul>`;
    } else {
      contentHTML += `<p>No hay caracter√≠sticas disponibles.</p>`;
    }

    modal.innerHTML = contentHTML;

    const closeButton = document.createElement("button");
    closeButton.textContent = "Cerrar";
    closeButton.style.padding = "8px 16px";
    closeButton.style.background = "#25D366";
    closeButton.style.color = "white";
    closeButton.style.border = "none";
    closeButton.style.borderRadius = "4px";
    closeButton.style.cursor = "pointer";
    closeButton.style.marginTop = "16px";
    closeButton.addEventListener("click", (e) => {
      e.stopPropagation();
      modal.style.opacity = "0";
      overlay.style.opacity = "0";
      setTimeout(() => {
        document.body.removeChild(overlay);
      }, 300);
    });

    modal.appendChild(closeButton);
    overlay.appendChild(modal);

    overlay.addEventListener("click", (event) => {
      if (event.target === overlay) {
        modal.style.opacity = "0";
        overlay.style.opacity = "0";
        setTimeout(() => {
          document.body.removeChild(overlay);
        }, 300);
      }
    });

    document.body.appendChild(overlay);

    requestAnimationFrame(() => {
      overlay.style.opacity = "1";
      modal.style.opacity = "1";
      modal.style.transform = "translateY(0)";
    });
  }
</script>
